AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-hiberry-app-clients

Globals:
  Function:
    Timeout: 120
  Api:
    Cors:
        AllowHeaders: "'Content-Type,Authorization,authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        MaxAge: "'3600'"
        AllowMethods: "'HEAD,OPTIONS,POST,GET,PUT,DELETE'"
        AllowCredentials: "'false'"
    GatewayResponses:
        DEFAULT_4xx:
            ResponseParameters:
                Headers:
                    Access-Control-Allow-Headers: "'Content-Type,Authorization,authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                    Access-Control-Allow-Origin: "'*'"
                    Access-Control-Allow-Methods: "'HEAD,OPTIONS,POST,GET,PUT,DELETE'"
        DEFAULT_5xx:
            ResponseParameters:
                Headers:
                    Access-Control-Allow-Headers: "'Content-Type,Authorization,authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                    Access-Control-Allow-Origin: "'*'"
                    Access-Control-Allow-Methods: "'HEAD,OPTIONS,POST,GET,PUT,DELETE'"

Parameters:
  StageName:
    Type: String
    Default: development
    AllowedValues:
      - local
      - development
      - uat
      - prod
  LogLevel:
    Type: String
    Default: INFO

Resources:

  ClientsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Clients
      AttributeDefinitions:
        - AttributeName: phone_number
          AttributeType: S
      KeySchema:
        - AttributeName: phone_number
          KeyType: HASH  
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  CreateClientFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "CreateClientFunction-${StageName}"
      CodeUri: .
      Handler: lambda_function.create_client
      Runtime: python3.11
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: create-client
          POWERTOOLS_LOG_LEVEL: !Ref LogLevel
          APP_ENVIRONMENT: !Ref StageName
      Events:
        HttpPost:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients
            Method: post
            Auth:
              Authorizer: HiBerryCognitoAuthorizer
      Role: !GetAtt CreateClientRole.Arn

  UpdateClientFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "UpdateClientFunction-${StageName}"
      CodeUri: .
      Handler: lambda_function.update_client
      Runtime: python3.11
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: update-client
          POWERTOOLS_LOG_LEVEL: !Ref LogLevel
          APP_ENVIRONMENT: !Ref StageName
      Events:
        HttpPut:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients
            Method: put
            Auth:
              Authorizer: HiBerryCognitoAuthorizer
      Role: !GetAtt UpdateClientsRole.Arn

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      Auth:
        Authorizers:
          HiBerryCognitoAuthorizer:
            UserPoolArn:
              - !Sub 
                - 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}'
                - UserPoolId: !ImportValue HiBerryUserPoolIdExport

  CreateClientRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "CreateClientRole-${StageName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBPutItemPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: !GetAtt ClientsTable.Arn
        - PolicyName: LocationServiceAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - geo:SearchPlaceIndexForText
                Resource: !ImportValue HiBerryLocationIndexArn
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
        
  UpdateClientsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "UpdateClientsRole-${StageName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBUpdateItemPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:DeleteItem
                Resource: !GetAtt ClientsTable.Arn
        - PolicyName: LocationServiceAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - geo:SearchPlaceIndexForText
                Resource: !ImportValue HiBerryLocationIndexArn
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

Outputs:
  CreateClientFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt CreateClientFunction.Arn
  UpdateClientFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt UpdateClientFunction.Arn
  HttpApiEndpoint:
    Description: The default endpoint ApiGateway.
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/"
